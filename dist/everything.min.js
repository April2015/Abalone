var gameLogic;!function(a){function b(){for(var b=[],c=0;c<a.ROWS;c++){b[c]=[];for(var d=0;d<a.COLS;d++)b[c][d]=""}for(var e=0;e<a.PLACES.length;e++){var f=a.PLACES[e],c=f.row,d=f.col;b[c][d]="O"}return b}function c(){var a=b();return a[0][4]="W",a[0][6]="W",a[0][10]="B",a[0][12]="B",a[1][3]="W",a[1][5]="W",a[1][7]="W",a[1][9]="B",a[1][11]="B",a[1][13]="B",a[2][4]="W",a[2][6]="W",a[2][10]="B",a[2][12]="B",a[6][4]="B",a[6][6]="B",a[6][10]="W",a[6][12]="W",a[7][3]="B",a[7][5]="B",a[7][7]="B",a[7][9]="W",a[7][11]="W",a[7][13]="W",a[8][4]="B",a[8][6]="B",a[8][10]="W",a[8][12]="W",a}function d(){var a=c(),b={board:a,isInitialState:!0,blackRemoved:0,whiteRemoved:0};return b}function e(a){return 6===a.blackRemoved?"W":6===a.whiteRemoved?"B":""}function f(c){var d=angular.copy(c.board),e=0,f=0;if(d.length!==a.ROWS)return!1;for(var g=0;g<a.ROWS;g++)if(d[g].length!==a.COLS)return!1;for(var h=0;h<a.PLACES.length;h++){var i=a.PLACES[h],g=i.row,j=i.col,k=d[g][j];if("O"!==k&&"B"!==k&&"W"!==k)return!1;"B"===k&&e++,"W"===k&&f++,d[g][j]="O"}if(e+c.blackRemoved!==14||f+c.whiteRemoved!==14)return!1;var l=b();return angular.equals(d,l)?!0:!1}function g(b){for(var c=0;c<a.DIREC.length;c++){var d=a.DIREC[c];if(angular.equals(b,d))return!0}return!1}function h(b,c,d){var e=b.board;if(c.selfMarbles.length>3||0===c.selfMarbles.length)return!1;if(c.selfMarbles.length<=c.opponentMarbles.length)return!1;if(!g(c.direction))return!1;for(var f=0;f<c.selfMarbles.length;f++){var h=c.selfMarbles[f].row,i=c.selfMarbles[f].col;if(0>h||h>=a.ROWS||0>i||i>=a.COLS||e[h][i]!==(0===d?"B":"W"))return!1}for(var f=0;f<c.opponentMarbles.length;f++){var h=c.opponentMarbles[f].row,i=c.opponentMarbles[f].col;if(0>h||h>=a.ROWS||0>i||i>=a.COLS||e[h][i]!==(0===d?"W":"B"))return!1}if(!c.isInline){if(0!==c.opponentMarbles.length)return!1;for(var f=0;f<c.selfMarbles.length;f++){var h=c.selfMarbles[f].row+c.direction.row,i=c.selfMarbles[f].col+c.direction.col;if(0>h||h>=a.ROWS||0>i||i>=a.COLS||"O"!==e[h][i])return!1}var j;if(c.selfMarbles.length>1){var k=c.selfMarbles[1].row-c.selfMarbles[0].row,l=c.selfMarbles[1].col-c.selfMarbles[0].col;if(j={row:k,col:l},!g(j))return!1}if(3===c.selfMarbles.length){var m=c.selfMarbles[2].row-c.selfMarbles[1].row,n=c.selfMarbles[2].col-c.selfMarbles[1].col,o={row:m,col:n};if(j!==o)return!1}}if(c.isInline){for(var f=1;f<c.selfMarbles.length;f++){var p=c.selfMarbles[f-1].row+c.direction.row,q=c.selfMarbles[f-1].col+c.direction.col;if(p!==c.selfMarbles[f].row||q!==c.selfMarbles[f].col)return!1}var r=c.selfMarbles.length,h=c.selfMarbles[r-1].row+c.direction.row,i=c.selfMarbles[r-1].col+c.direction.col;if(r=c.opponentMarbles.length,0>h||h>=a.ROWS||0>i||i>=a.COLS||0===r&&"O"!==e[h][i])return!1;if(r>0&&(c.opponentMarbles[0].row!==h||c.opponentMarbles[0].col!==i))return!1;if(2===r){var s=c.opponentMarbles[1].row-c.opponentMarbles[0].row,t=c.opponentMarbles[1].col-c.opponentMarbles[0].col;if(s!==c.direction.row||t!==c.direction.col)return!1}if(r>0){var u=c.opponentMarbles[r-1].row+c.direction.row,v=c.opponentMarbles[r-1].col+c.direction.col;if(u>=0&&u<a.ROWS&&v>=0&&v<a.COLS&&"O"!==e[u][v])return!1}}return!0}function i(a,b,c,e,f){e&&0!==Object.keys(e).length||(e=d());for(var g=[],h=[],i=0===f?"B":"W",j=0;j<b.length;j++)e.board[b[j].row][b[j].col]===i?g.push(b[j]):h.push(b[j]);var k={isInline:a,direction:c,selfMarbles:g,opponentMarbles:h};return k}function j(b,c,g){if(b&&0!==Object.keys(b).length||(b=d()),!f(b))throw new Error("The given state is invalid");if("B"===e(b)||"W"===e(b))throw new Error("Can only make a move if the game is not over!");if(!h(b,c,g))throw new Error("Action is invalid and game is halted!");var i=angular.copy(b);if(i.isInitialState===!0&&(i.isInitialState=!1),!c.isInline)for(var j=0;j<c.selfMarbles.length;j++){var k=c.selfMarbles[j].row,l=c.selfMarbles[j].col;i.board[k][l]="O",k+=c.direction.row,l+=c.direction.col,i.board[k][l]=0===g?"B":"W"}if(c.isInline){var k=c.selfMarbles[0].row,l=c.selfMarbles[0].col;i.board[k][l]="O";var m=c.selfMarbles.length;if(k=c.selfMarbles[m-1].row+c.direction.row,l=c.selfMarbles[m-1].col+c.direction.col,i.board[k][l]=0===g?"B":"W",m=c.opponentMarbles.length,m>0){var n=c.opponentMarbles[m-1].row+c.direction.row,o=c.opponentMarbles[m-1].col+c.direction.col;0>n||n>=a.ROWS||0>o||o>=a.COLS?0===g?i.whiteRemoved++:i.blackRemoved++:i.board[n][o]=0===g?"W":"B"}}var p,q=e(i);p="B"===q||"W"===q?{endMatch:{endMatchScores:"B"===q?[1,0]:[0,1]}}:{setTurn:{turnIndex:1-g}};var r=[p,{set:{key:"action",value:c}},{set:{key:"state",value:i}}];return r}function k(a){var b=a.move,c=a.turnIndexBeforeMove,d=a.stateBeforeMove;try{var e=b[1].set.value,f=j(d,e,c);if(angular.equals(b,f))return!0}catch(g){return!1}return!1}a.ROWS=9,a.COLS=17,a.DIREC=[{row:0,col:2},{row:1,col:-1},{row:1,col:1},{row:0,col:-2},{row:-1,col:1},{row:-1,col:-1}],a.PLACES=[{row:0,col:4},{row:0,col:6},{row:0,col:8},{row:0,col:10},{row:0,col:12},{row:1,col:3},{row:1,col:5},{row:1,col:7},{row:1,col:9},{row:1,col:11},{row:1,col:13},{row:2,col:2},{row:2,col:4},{row:2,col:6},{row:2,col:8},{row:2,col:10},{row:2,col:12},{row:2,col:14},{row:3,col:1},{row:3,col:3},{row:3,col:5},{row:3,col:7},{row:3,col:9},{row:3,col:11},{row:3,col:13},{row:3,col:15},{row:4,col:0},{row:4,col:2},{row:4,col:4},{row:4,col:6},{row:4,col:8},{row:4,col:10},{row:4,col:12},{row:4,col:14},{row:4,col:16},{row:5,col:1},{row:5,col:3},{row:5,col:5},{row:5,col:7},{row:5,col:9},{row:5,col:11},{row:5,col:13},{row:5,col:15},{row:6,col:2},{row:6,col:4},{row:6,col:6},{row:6,col:8},{row:6,col:10},{row:6,col:12},{row:6,col:14},{row:7,col:3},{row:7,col:5},{row:7,col:7},{row:7,col:9},{row:7,col:11},{row:7,col:13},{row:8,col:4},{row:8,col:6},{row:8,col:8},{row:8,col:10},{row:8,col:12}],a.getInitialBoard=c,a.getInitialState=d,a.getWinner=e,a.isStepValid=h,a.clickToAction=i,a.createMove=j,a.isMoveOk=k}(gameLogic||(gameLogic={}));var game;!function(a){function b(){console.log("Translation of 'RULES_OF_ABALONE' is "+translate("RULES_OF_ABALONE")),resizeGameAreaService.setWidthToHeight(1.2),gameService.setGame({minNumberOfPlayers:2,maxNumberOfPlayers:2,isMoveOk:gameLogic.isMoveOk,updateUI:e}),document.addEventListener("animationend",c,!1),document.addEventListener("webkitAnimationEnd",c,!1),document.addEventListener("oanimationend",c,!1)}function c(){$rootScope.$apply(function(){log.info("Animation ended"),m=!0,o&&d()})}function d(){gameService.makeMove(aiService.createComputerMove(q,r,{millisecondsLimit:1e3}))}function e(a){log.info("Game got updateUI:",a),m=!1,p=a,q=a.stateAfterMove,q.board||(q=gameLogic.getInitialState()),n=a.turnIndexAfterMove>=0&&a.yourPlayerIndex===a.turnIndexAfterMove,r=a.turnIndexAfterMove,o=n&&""===a.playersInfo[a.yourPlayerIndex].playerId,o&&(n=!1,q.isInitialState===!0&&d())}function f(a,b){if(log.info("Clicked on cell:",a,b),"?throwException"===window.location.search)throw new Error("Throwing the error because URL has '?throwException'");if(n)try{if(0===t)return s=null,u.row=a,u.col=a%2+2*b,void t++;if(1!==t)throw new Error("something is wrong");t=0,v.row=a-u.row,v.col=a%2+2*b-u.col;var c=[u];s={isInline:!0,direction:v,selfMarbles:c,opponentMarbles:[]};var d=gameLogic.createMove(q,s,p.turnIndexAfterMove);n=!1,gameService.makeMove(d)}catch(e){return void log.info(["Illegal movement from",a,b])}}function g(a,b){var c=a%2+2*b,d=q.board[a][c];return"B"===d||"W"===d?!0:!1}function h(a,b){var c=a%2+2*b;return"B"===q.board[a][c]}function i(a,b){var c=a%2+2*b;return"W"===q.board[a][c]}function j(a,b){return!m&&q.blackRemoved&&g(a,b)}function k(a){return"B"===a?"imgs/black.png":"W"===a?"imgs/white.png":""}function l(a,b){var c=a%2+2*b,d=q.board[a][c];return k(d)}var m=!1,n=!1,o=!1,p=null;a.isHelpModalShown=!1;var q=null,r=null,s=null,t=0,u={row:1,col:-1},v={row:0,col:0};a.init=b,a.cellClicked=f,a.shouldShowImage=g,a.isPieceB=h,a.isPieceW=i,a.shouldSlowlyAppear=j,a.getImageSrc=l}(game||(game={})),angular.module("myApp",["ngTouch","ui.bootstrap","gameServices"]).run(function(){$rootScope.game=game,translate.setLanguage("en",{RULES_OF_ABALONE:"Rules of Abalone",RULES_SLIDE1:"Each side has 14 marbles and takes turns to move; whoever first removes 6 of the opponent's marbles wins.",RULES_SLIDE2:"Marbles in a line can be moved along the line by 1 step; at most 3 of your own marbles and less of your opponent's can be moved.",RULES_SLIDE3:"You can also move 2~3 of your own marbles in a line to open space in a neighbor parallel line. ",CLOSE:"Close"}),game.init()});var aiService;!function(a){function b(a){return d(a.stateAfterMove,a.turnIndexAfterMove,{millisecondsLimit:1e3})}function c(a,b){for(var c=[],d=a.board,e=0===b?"B":"W",f=0,g=gameLogic.PLACES;f<g.length;f++){var h=g[f],i=h.row,j=h.col;if(d[i][j]===e)for(var k=0;6>k;k++){for(var l=gameLogic.DIREC[k],m=i,n=j,o=[h],p=0;2>p&&(m+=l.row,n+=l.col,!(0>m||m>=gameLogic.ROWS||0>n||n>=gameLogic.COLS||d[m][n]!==e));p++)o.push({row:m,col:n});var q=o.length;m=i+q*l.row,n=j+q*l.col;var r=0>m||m>=gameLogic.ROWS||0>n||n>=gameLogic.COLS||""===d[m][n]||d[m][n]===e;if(!r){if("O"===d[m][n]){var s={isInline:!0,direction:l,selfMarbles:o,opponentMarbles:[]};try{c.push(gameLogic.createMove(a,s,b))}catch(t){}}if(d[m][n]===(0===b?"W":"B")){var u=[{row:m,col:n}];m+=l.row,n+=l.col,m>=0&&m<gameLogic.ROWS&&n>=0&&n<gameLogic.COLS&&d[m][n]===(0===b?"W":"B")&&u.push({row:m,col:n});var s={isInline:!0,direction:l,selfMarbles:o,opponentMarbles:u};try{var v=gameLogic.createMove(a,s,b);if(""!==gameLogic.getWinner(v[2].set.value))return c=[v];c.push(v)}catch(t){}}}if(!(1>=q||k>2))for(;q>=2;){for(var w=0;5>w;w++)if(w!==k&&w!==k+3)try{var s={isInline:!1,direction:gameLogic.DIREC[w],selfMarbles:o,opponentMarbles:[]};gameLogic.isStepValid(a,s,b)&&c.push(gameLogic.createMove(a,s,b))}catch(t){}3===q&&o.pop(),q--}}}return c}function d(a,b,c){return alphaBetaService.alphaBetaDecision([null,null,{set:{key:"state",value:a}}],b,f,e,"?debug"===window.location.search?g:null,c)}function e(a){if(a[0].endMatch){var b=a[0].endMatch.endMatchScores;return b[0]>b[1]?Number.POSITIVE_INFINITY:b[0]<b[1]?Number.NEGATIVE_INFINITY:0}return 0}function f(a,b){return c(a[2].set.value,b)}function g(a){return"\n"+a[2].set.value.board.join("\n")+"\n"}a.findComputerMove=b,a.getPossibleMoves=c,a.createComputerMove=d}(aiService||(aiService={}));
//# sourceMappingURL=everything.min.js.map