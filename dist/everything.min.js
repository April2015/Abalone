var gameLogic;!function(a){function b(){for(var b=[],c=0;c<a.ROWS;c++){b[c]=[];for(var d=0;d<a.COLS;d++)b[c][d]=""}for(var e=0;e<a.PLACES.length;e++){var f=a.PLACES[e],c=f.row,d=f.col;b[c][d]="O"}return b}function c(){var a=b();return a[0][4]="W",a[0][6]="W",a[0][10]="B",a[0][12]="B",a[1][3]="W",a[1][5]="W",a[1][7]="W",a[1][9]="B",a[1][11]="B",a[1][13]="B",a[2][4]="W",a[2][6]="W",a[2][10]="B",a[2][12]="B",a[6][4]="B",a[6][6]="B",a[6][10]="W",a[6][12]="W",a[7][3]="B",a[7][5]="B",a[7][7]="B",a[7][9]="W",a[7][11]="W",a[7][13]="W",a[8][4]="B",a[8][6]="B",a[8][10]="W",a[8][12]="W",a}function d(){var a=c(),b={board:a,isInitialState:!0,blackRemoved:0,whiteRemoved:0};return b}function e(a){return 6===a.blackRemoved?"W":6===a.whiteRemoved?"B":""}function f(c){var d=angular.copy(c.board),e=0,f=0;if(d.length!==a.ROWS)return!1;for(var g=0;g<a.ROWS;g++)if(d[g].length!==a.COLS)return!1;for(var h=0;h<a.PLACES.length;h++){var i=a.PLACES[h],g=i.row,j=i.col,k=d[g][j];if("O"!==k&&"B"!==k&&"W"!==k)return!1;"B"===k&&e++,"W"===k&&f++,d[g][j]="O"}if(e+c.blackRemoved!==14||f+c.whiteRemoved!==14)return!1;var l=b();return angular.equals(d,l)?!0:!1}function g(b){for(var c=0;c<a.DIREC.length;c++){var d=a.DIREC[c];if(angular.equals(b,d))return!0}return!1}function h(b,c,d){var e=b.board;if(c.selfMarbles.length>3||0===c.selfMarbles.length)return!1;if(c.selfMarbles.length<=c.opponentMarbles.length)return!1;if(!g(c.direction))return!1;for(var f=0;f<c.selfMarbles.length;f++){var h=c.selfMarbles[f].row,i=c.selfMarbles[f].col;if(0>h||h>=a.ROWS||0>i||i>=a.COLS||e[h][i]!==(0===d?"B":"W"))return!1}for(var f=0;f<c.opponentMarbles.length;f++){var h=c.opponentMarbles[f].row,i=c.opponentMarbles[f].col;if(0>h||h>=a.ROWS||0>i||i>=a.COLS||e[h][i]!==(0===d?"W":"B"))return!1}if(!c.isInline){if(0!==c.opponentMarbles.length)return!1;for(var f=0;f<c.selfMarbles.length;f++){var h=c.selfMarbles[f].row+c.direction.row,i=c.selfMarbles[f].col+c.direction.col;if(0>h||h>=a.ROWS||0>i||i>=a.COLS||"O"!==e[h][i])return!1}var j;if(c.selfMarbles.length>1){var k=c.selfMarbles[1].row-c.selfMarbles[0].row,l=c.selfMarbles[1].col-c.selfMarbles[0].col;if(j={row:k,col:l},!g(j))return!1}if(3===c.selfMarbles.length){var m=c.selfMarbles[2].row-c.selfMarbles[1].row,n=c.selfMarbles[2].col-c.selfMarbles[1].col,o={row:m,col:n};if(!angular.equals(j,o))return!1}}if(c.isInline){for(var f=1;f<c.selfMarbles.length;f++){var p=c.selfMarbles[f-1].row+c.direction.row,q=c.selfMarbles[f-1].col+c.direction.col;if(p!==c.selfMarbles[f].row||q!==c.selfMarbles[f].col)return!1}var r=c.selfMarbles.length,h=c.selfMarbles[r-1].row+c.direction.row,i=c.selfMarbles[r-1].col+c.direction.col;if(r=c.opponentMarbles.length,0>h||h>=a.ROWS||0>i||i>=a.COLS||0===r&&"O"!==e[h][i])return!1;if(r>0&&(c.opponentMarbles[0].row!==h||c.opponentMarbles[0].col!==i))return!1;if(2===r){var s=c.opponentMarbles[1].row-c.opponentMarbles[0].row,t=c.opponentMarbles[1].col-c.opponentMarbles[0].col;if(s!==c.direction.row||t!==c.direction.col)return!1}if(r>0){var u=c.opponentMarbles[r-1].row+c.direction.row,v=c.opponentMarbles[r-1].col+c.direction.col;if(u>=0&&u<a.ROWS&&v>=0&&v<a.COLS&&("B"===e[u][v]||"W"===e[u][v]))return!1}}return!0}function i(b,c,g){if(b&&0!==Object.keys(b).length||(b=d()),!f(b))throw new Error("The given state is invalid");if("B"===e(b)||"W"===e(b))throw new Error("Can only make a move if the game is not over!");if(!h(b,c,g))throw new Error("Action is invalid and game is halted!");var i=angular.copy(b);if(i.isInitialState===!0&&(i.isInitialState=!1),!c.isInline)for(var j=0;j<c.selfMarbles.length;j++){var k=c.selfMarbles[j].row,l=c.selfMarbles[j].col;i.board[k][l]="O",k+=c.direction.row,l+=c.direction.col,i.board[k][l]=0===g?"B":"W"}if(c.isInline){var k=c.selfMarbles[0].row,l=c.selfMarbles[0].col;i.board[k][l]="O";var m=c.selfMarbles.length;if(k=c.selfMarbles[m-1].row+c.direction.row,l=c.selfMarbles[m-1].col+c.direction.col,i.board[k][l]=0===g?"B":"W",m=c.opponentMarbles.length,m>0){var n=c.opponentMarbles[m-1].row+c.direction.row,o=c.opponentMarbles[m-1].col+c.direction.col;n>=0&&n<a.ROWS&&o>=0&&o<a.COLS&&"O"===b.board[n][o]?i.board[n][o]=0===g?"W":"B":0===g?i.whiteRemoved++:i.blackRemoved++}}var p,q=e(i);p="B"===q||"W"===q?{endMatch:{endMatchScores:"B"===q?[1,0]:[0,1]}}:{setTurn:{turnIndex:1-g}};var r=[p,{set:{key:"board",value:i.board}},{set:{key:"isInitialState",value:i.isInitialState}},{set:{key:"blackRemoved",value:i.blackRemoved}},{set:{key:"whiteRemoved",value:i.whiteRemoved}},{set:{key:"action",value:c}}];return r}function j(a){var b=a.move,c=a.turnIndexBeforeMove,d=a.stateBeforeMove;try{var e=b[5].set.value,f=i(d,e,c);if(angular.equals(b,f))return!0}catch(g){return!1}return!1}a.ROWS=9,a.COLS=17,a.DIREC=[{row:0,col:2},{row:1,col:-1},{row:1,col:1},{row:0,col:-2},{row:-1,col:1},{row:-1,col:-1}],a.PLACES=[{row:0,col:4},{row:0,col:6},{row:0,col:8},{row:0,col:10},{row:0,col:12},{row:1,col:3},{row:1,col:5},{row:1,col:7},{row:1,col:9},{row:1,col:11},{row:1,col:13},{row:2,col:2},{row:2,col:4},{row:2,col:6},{row:2,col:8},{row:2,col:10},{row:2,col:12},{row:2,col:14},{row:3,col:1},{row:3,col:3},{row:3,col:5},{row:3,col:7},{row:3,col:9},{row:3,col:11},{row:3,col:13},{row:3,col:15},{row:4,col:0},{row:4,col:2},{row:4,col:4},{row:4,col:6},{row:4,col:8},{row:4,col:10},{row:4,col:12},{row:4,col:14},{row:4,col:16},{row:5,col:1},{row:5,col:3},{row:5,col:5},{row:5,col:7},{row:5,col:9},{row:5,col:11},{row:5,col:13},{row:5,col:15},{row:6,col:2},{row:6,col:4},{row:6,col:6},{row:6,col:8},{row:6,col:10},{row:6,col:12},{row:6,col:14},{row:7,col:3},{row:7,col:5},{row:7,col:7},{row:7,col:9},{row:7,col:11},{row:7,col:13},{row:8,col:4},{row:8,col:6},{row:8,col:8},{row:8,col:10},{row:8,col:12}],a.getInitialBoard=c,a.getInitialState=d,a.getWinner=e,a.isStepValid=h,a.createMove=i,a.isMoveOk=j}(gameLogic||(gameLogic={}));var game;!function(a){function b(){console.log("Translation of 'RULES_OF_ABALONE' is "+translate("RULES_OF_ABALONE")),resizeGameAreaService.setWidthToHeight(1.2),gameService.setGame({minNumberOfPlayers:2,maxNumberOfPlayers:2,isMoveOk:gameLogic.isMoveOk,updateUI:e}),document.addEventListener("animationend",c,!1),document.addEventListener("webkitAnimationEnd",c,!1),document.addEventListener("oanimationend",c,!1),dragAndDropService.addDragListener("gameArea",f)}function c(){$rootScope.$apply(function(){log.info("Animation ended"),y=!0,A&&d()})}function d(){A&&(A=!1,gameService.makeMove(aiService.createComputerMove(H,I,{millisecondsLimit:1e3})))}function e(a){log.info("Game got updateUI:",a),y=!1,H=a.stateAfterMove,H.board||(H=gameLogic.getInitialState()),z=a.turnIndexAfterMove>=0&&a.yourPlayerIndex===a.turnIndexAfterMove,I=a.turnIndexAfterMove,A=z&&""===a.playersInfo[a.yourPlayerIndex].playerId,A&&(z=!1,H.isInitialState===!0&&d())}function f(a,b,c){B=document.getElementById("gameArea"),C=document.getElementById("draggingLines"),D=document.getElementById("verticalDraggingLine"),E=document.getElementById("horizontalDraggingLine"),F=document.getElementById("clickToDragPiece"),G=document.getElementById("clickToSubmit");var d=b-B.offsetLeft,e=c-B.offsetTop;if(0>d||0>e||d>=B.clientWidth||e>=B.clientHeight)return C.style.display="none",F.style.display="none",void(G.style.display="none");var f=Math.floor(11*e/B.clientHeight)-1,j=0;if(f%2==0?j=Math.floor((d-.095*B.clientWidth)/(.09*B.clientWidth)):9>f?j=Math.floor((d-.14*B.clientWidth)/(.09*B.clientWidth)):d>.85*B.clientWidth&&(j=9),9>f){m(f,j)&&(F.style.display="inline");var k=i(f,j);D.setAttribute("x1",k.width.toString()),D.setAttribute("x2",k.width.toString()),E.setAttribute("y1",k.height.toString()),E.setAttribute("y2",k.height.toString());var n=9.1*(f+1);F.style.top=n.toString()+"%";var o=9.5+9*j;f%2===1&&(o+=4.5),F.style.left=o.toString()+"%"}else 9==f&&9==j&&(N=!0,G.style.display="inline");if("touchstart"===a&&l(f,j)){var p={row:f,col:f%2+2*j};L.push(p)}else"touchend"===a&&(9>f&&g(f,j),9===f&&9===j&&N===!0&&(h(),N=!1));("touchend"===a||"touchcancel"===a||"touchleave"===a||"mouseup"===a)&&(C.style.display="none",F.style.display="none",G.style.display="none")}function g(a,b){var c=a%2+2*b;if(0!==L.length&&H&&H.board){var d=L.length,e=a-L[d-1].row,f=c-L[d-1].col,g=(j(e)+j(f))/2;if(e%g!==0||f%g!==0)return void L.pop();if(e/=g,f/=g,e!==K.row||f!==K.col){var h=L[d-1];L=[h],K={row:e,col:f},e=L[0].row+K.row,f=L[0].col+K.col,J="O"===H.board[e][f]?!1:!0}else J===!0&&(L=[L[d-1]])}}function h(){if(z){try{M=[];var a=k(),b=gameLogic.createMove(H,a,I);z=!1,gameService.makeMove(b)}catch(c){log.info(J===!0&&L.length>0?["Illegal inline movement from",L[0].row,L[0].col]:J===!1&&L.length>0?["Illegal broadside movement from",L[0].row,L[0].col]:["Illegal movement"])}J=null,K={row:10,col:0},L=[]}}function i(a,b){var c=B.clientHeight,d=B.clientWidth,e=.091*c*(a+1)+.045*c,f=.14*d+.09*d*b+.045*d*(a%2);return{width:f,height:e}}function j(a){return a>=0?a:-a}function k(){var a=0===I?"B":"W",b=0===I?"W":"B",c={isInline:J,direction:K,selfMarbles:[],opponentMarbles:[]};if(J===!0&&L.length>0){c.selfMarbles.push(L[0]);for(var d=L[0].row+K.row,e=L[0].col+K.col;d>=0&&8>=d&&e>=0&&16>=e;){var f={row:d,col:e};if(M.push(f),""===H.board[d][e]&&M.pop(),H.board[d][e]==a)c.selfMarbles.push(f),d+=K.row,e+=K.col;else{if(H.board[d][e]!=b)break;c.opponentMarbles.push(f),d+=K.row,e+=K.col}}}if(J===!1&&L.length>0)for(var g=0;g<L.length;g++){c.selfMarbles.push(L[g]);var d=L[g].row+K.row,e=L[g].col+K.col;M.push({row:d,col:e})}return c}function l(a,b){var c=a%2+2*b;return 0>a||a>8||0>c||c>16?!1:H.board[a][c]===(0===I?"B":"W")}function m(a,b){var c=a%2+2*b;return 0>a||a>8||0>c||c>16||""===H.board[a][c]?!1:!0}function n(a,b){var c=a%2+2*b,d=H.board[a][c];return"B"===d||"W"===d?!0:!1}function o(a,b){var c=a%2+2*b;return"B"===H.board[a][c]}function p(a,b){var c=a%2+2*b;return"O"===H.board[a][c]}function q(){return 0===I}function r(){return 6===H.whiteRemoved}function s(){return H.blackRemoved}function t(a,b){var c=a%2+2*b;return"W"===H.board[a][c]}function u(){return 1===I}function v(){return 6===H.blackRemoved}function w(){return H.whiteRemoved}function x(a,b){for(var c=!1,d=a%2+2*b,e=0;e<M.length;e++)if(M[e].row===a&&M[e].col===d){c=!0;break}return!y&&c&&n(a,b)}var y=!1,z=!1,A=!1;a.isHelpModalShown=!1;var B,C,D,E,F,G,H=null,I=null,J=null,K={row:10,col:0},L=[],M=[],N=!1;a.init=b,a.handleDragEvent=f,a.touchToAction=k,a.shouldShowImage=n,a.isPieceB=o,a.isEmpty=p,a.isBsTurn=q,a.blackWin=r,a.blackRemoved=s,a.isPieceW=t,a.isWsTurn=u,a.whiteWin=v,a.whiteRemoved=w,a.shouldSlowlyAppear=x}(game||(game={})),angular.module("myApp",["ngTouch","ui.bootstrap","gameServices"]).run(function(){$rootScope.game=game,translate.setLanguage("en",{RULES_OF_ABALONE:"Rules of Abalone",RULES_SLIDE1:"Each side has 14 marbles and takes turns to move with the black moving first. Whoever first pushes six of the opponent's marbles off board wins.",RULES_SLIDE2:"For each move, a player moves a line of one, two or three marbles one space. The move can be either broadside (parallel to the line of marbles) or in-line (serial in respect to the line of marbles)",RULES_SLIDE3:"Inline: With an in-line move one can push the opponent′s marbles in an adjacent space to their own; push is valid only if the pushing line has more marbles than the pushed line; marbles must be pushed into an open space or off the board. ",RULES_SLIDE4:"Broadside: You can move a line of 1-3 of your marbles parallelly to open space in a neighboring line. ",CLOSE:"Close"}),game.init()});var aiService;!function(a){function b(a,b){for(var c=[],d=a.board,e=0===b?"B":"W",f=0,g=gameLogic.PLACES;f<g.length;f++){var h=g[f],i=h.row,j=h.col;if(d[i][j]===e)for(var k=0;6>k;k++){for(var l=gameLogic.DIREC[k],m=i,n=j,o=[h],p=0;2>p&&(m+=l.row,n+=l.col,!(0>m||m>=gameLogic.ROWS||0>n||n>=gameLogic.COLS||d[m][n]!==e));p++)o.push({row:m,col:n});var q=o.length;m=i+q*l.row,n=j+q*l.col;var r=0>m||m>=gameLogic.ROWS||0>n||n>=gameLogic.COLS||""===d[m][n]||d[m][n]===e;if(!r){if("O"===d[m][n]){var s={isInline:!0,direction:l,selfMarbles:o,opponentMarbles:[]};try{c.push(gameLogic.createMove(a,s,b))}catch(t){}}if(d[m][n]===(0===b?"W":"B")){var u=[{row:m,col:n}];m+=l.row,n+=l.col,m>=0&&m<gameLogic.ROWS&&n>=0&&n<gameLogic.COLS&&d[m][n]===(0===b?"W":"B")&&u.push({row:m,col:n});var s={isInline:!0,direction:l,selfMarbles:o,opponentMarbles:u};try{var v=gameLogic.createMove(a,s,b);if(""!==gameLogic.getWinner(v[2].set.value))return c=[v];c.push(v)}catch(t){}}}if(!(1>=q||k>2))for(;q>=2;){for(var w=0;5>w;w++)if(w!==k&&w!==k+3)try{var s={isInline:!1,direction:gameLogic.DIREC[w],selfMarbles:o,opponentMarbles:[]};gameLogic.isStepValid(a,s,b)&&c.push(gameLogic.createMove(a,s,b))}catch(t){}3===q&&o.pop(),q--}}}return c}function c(a,c){var d=b(a,c),e=d.length;if(0==e)return d[0];var f=Math.floor(Math.random()*e);return d[f]}a.getPossibleMoves=b,a.createComputerMove=c}(aiService||(aiService={}));
//# sourceMappingURL=everything.min.js.map