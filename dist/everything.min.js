var gameLogic;!function(a){function b(){for(var b=[],c=0;c<a.ROWS;c++){b[c]=[];for(var d=0;d<a.COLS;d++)b[c][d]=""}for(var e=0;e<a.PLACES.length;e++){var f=a.PLACES[e],c=f.row,d=f.col;b[c][d]="O"}return b}function c(){var a=b();return a[0][4]="W",a[0][6]="W",a[0][10]="B",a[0][12]="B",a[1][3]="W",a[1][5]="W",a[1][7]="W",a[1][9]="B",a[1][11]="B",a[1][13]="B",a[2][4]="W",a[2][6]="W",a[2][10]="B",a[2][12]="B",a[6][4]="B",a[6][6]="B",a[6][10]="W",a[6][12]="W",a[7][3]="B",a[7][5]="B",a[7][7]="B",a[7][9]="W",a[7][11]="W",a[7][13]="W",a[8][4]="B",a[8][6]="B",a[8][10]="W",a[8][12]="W",a}function d(){var a=c(),b={board:a,isInitialState:!0,blackRemoved:0,whiteRemoved:0};return b}function e(a){return 6===a.blackRemoved?"W":6===a.whiteRemoved?"B":""}function f(b){for(var c=0;c<a.DIREC.length;c++){var d=a.DIREC[c];if(angular.equals(b,d))return!0}return!1}function g(b,c,d){var e=b.board;if(c.selfMarbles.length>3||0===c.selfMarbles.length)return!1;if(c.selfMarbles.length<=c.opponentMarbles.length)return!1;if(!f(c.direction))return!1;for(var g=0;g<c.selfMarbles.length;g++){var h=c.selfMarbles[g].row,i=c.selfMarbles[g].col;if(0>h||h>=a.ROWS||0>i||i>=a.COLS||e[h][i]!==(0===d?"B":"W"))return!1}for(var g=0;g<c.opponentMarbles.length;g++){var h=c.opponentMarbles[g].row,i=c.opponentMarbles[g].col;if(0>h||h>=a.ROWS||0>i||i>=a.COLS||e[h][i]!==(0===d?"W":"B"))return!1}if(!c.isInline){if(0!==c.opponentMarbles.length)return!1;for(var g=0;g<c.selfMarbles.length;g++){var h=c.selfMarbles[g].row+c.direction.row,i=c.selfMarbles[g].col+c.direction.col;if(0>h||h>=a.ROWS||0>i||i>=a.COLS||"O"!==e[h][i])return!1}var j;if(c.selfMarbles.length>1){var k=c.selfMarbles[1].row-c.selfMarbles[0].row,l=c.selfMarbles[1].col-c.selfMarbles[0].col;if(j={row:k,col:l},!f(j))return!1}if(3===c.selfMarbles.length){var m=c.selfMarbles[2].row-c.selfMarbles[1].row,n=c.selfMarbles[2].col-c.selfMarbles[1].col,o={row:m,col:n};if(j!==o)return!1}}if(c.isInline){for(var g=1;g<c.selfMarbles.length;g++){var p=c.selfMarbles[g-1].row+c.direction.row,q=c.selfMarbles[g-1].col+c.direction.col;if(p!==c.selfMarbles[g].row||q!==c.selfMarbles[g].col)return!1}var r=c.selfMarbles.length,h=c.selfMarbles[r-1].row+c.direction.row,i=c.selfMarbles[r-1].col+c.direction.col;if(r=c.opponentMarbles.length,0>h||h>=a.ROWS||0>i||i>=a.COLS||0===r&&"O"!==e[h][i])return!1;if(r>0&&(c.opponentMarbles[0].row!==h||c.opponentMarbles[0].col!==i))return!1;if(2===r){var s=c.opponentMarbles[1].row-c.opponentMarbles[0].row,t=c.opponentMarbles[1].col-c.opponentMarbles[0].col;if(s!==c.direction.row||t!==c.direction.col)return!1}if(r>0){var u=c.opponentMarbles[r-1].row+c.direction.row,v=c.opponentMarbles[r-1].col+c.direction.col;if(u>=0&&u<a.ROWS&&v>=0&&v<a.COLS&&"O"!==e[u][v])return!1}}return!0}function h(b,c,f){if(b&&0!==Object.keys(b).length||(b=d()),"B"===e(b)||"W"===e(b))throw new Error("Can only make a move if the game is not over!");var g=angular.copy(b);if(g.isInitialState===!0&&(g.isInitialState=!1),!c.isInline)for(var h=0;h<c.selfMarbles.length;h++){var i=c.selfMarbles[h].row,j=c.selfMarbles[h].col;g.board[i][j]="O",i+=c.direction.row,j+=c.direction.col,g.board[i][j]=0===f?"B":"W"}if(c.isInline){var i=c.selfMarbles[0].row,j=c.selfMarbles[0].col;g.board[i][j]="O";var k=c.selfMarbles.length;if(i=c.selfMarbles[k-1].row+c.direction.row,j=c.selfMarbles[k-1].col+c.direction.col,g.board[i][j]=0===f?"B":"W",k=c.opponentMarbles.length,k>0){var l=c.opponentMarbles[k-1].row+c.direction.row,m=c.opponentMarbles[k-1].col+c.direction.col;0>l||l>=a.ROWS||0>m||m>=a.COLS?0===f?g.whiteRemoved++:g.blackRemoved++:g.board[l][m]=0===f?"W":"B"}}var n,o=e(g);n="B"===o||"W"===o?{endMatch:{endMatchScores:"B"===o?[1,0]:[0,1]}}:{setTurn:{turnIndex:1-f}};var p=[n,{set:{key:"board",value:g.board}},{set:{key:"isInitialState",value:g.isInitialState}},{set:{key:"blackRemoved",value:g.blackRemoved}},{set:{key:"whiteRemoved",value:g.whiteRemoved}},{set:{key:"action",value:c}}];return p}function i(a){var b=a.move,c=a.turnIndexBeforeMove,d=a.stateBeforeMove;try{var e=b[5].set.value,f=h(d,e,c);if(angular.equals(b,f))return!0}catch(g){return!1}return!1}a.ROWS=9,a.COLS=17,a.DIREC=[{row:0,col:2},{row:1,col:-1},{row:1,col:1},{row:0,col:-2},{row:-1,col:1},{row:-1,col:-1}],a.PLACES=[{row:0,col:4},{row:0,col:6},{row:0,col:8},{row:0,col:10},{row:0,col:12},{row:1,col:3},{row:1,col:5},{row:1,col:7},{row:1,col:9},{row:1,col:11},{row:1,col:13},{row:2,col:2},{row:2,col:4},{row:2,col:6},{row:2,col:8},{row:2,col:10},{row:2,col:12},{row:2,col:14},{row:3,col:1},{row:3,col:3},{row:3,col:5},{row:3,col:7},{row:3,col:9},{row:3,col:11},{row:3,col:13},{row:3,col:15},{row:4,col:0},{row:4,col:2},{row:4,col:4},{row:4,col:6},{row:4,col:8},{row:4,col:10},{row:4,col:12},{row:4,col:14},{row:4,col:16},{row:5,col:1},{row:5,col:3},{row:5,col:5},{row:5,col:7},{row:5,col:9},{row:5,col:11},{row:5,col:13},{row:5,col:15},{row:6,col:2},{row:6,col:4},{row:6,col:6},{row:6,col:8},{row:6,col:10},{row:6,col:12},{row:6,col:14},{row:7,col:3},{row:7,col:5},{row:7,col:7},{row:7,col:9},{row:7,col:11},{row:7,col:13},{row:8,col:4},{row:8,col:6},{row:8,col:8},{row:8,col:10},{row:8,col:12}],a.getInitialBoard=c,a.getInitialState=d,a.getWinner=e,a.isStepValid=g,a.createMove=h,a.isMoveOk=i}(gameLogic||(gameLogic={}));var game;!function(a){function b(){console.log("Translation of 'RULES_OF_ABALONE' is "+translate("RULES_OF_ABALONE")),resizeGameAreaService.setWidthToHeight(1.2),gameService.setGame({minNumberOfPlayers:2,maxNumberOfPlayers:2,isMoveOk:gameLogic.isMoveOk,updateUI:e}),document.addEventListener("animationend",c,!1),document.addEventListener("webkitAnimationEnd",c,!1),document.addEventListener("oanimationend",c,!1)}function c(){$rootScope.$apply(function(){log.info("Animation ended"),n=!0,p&&d()})}function d(){gameService.makeMove(aiService.createComputerMove(q,r,{millisecondsLimit:1e3}))}function e(a){log.info("Game got updateUI:",a),n=!1,q=a.stateAfterMove,q.board||(q=gameLogic.getInitialState()),o=a.turnIndexAfterMove>=0&&a.yourPlayerIndex===a.turnIndexAfterMove,r=a.turnIndexAfterMove,p=o&&""===a.playersInfo[a.yourPlayerIndex].playerId,p&&(o=!1,q.isInitialState===!0&&d())}function f(a,b){if(log.info("Clicked on cell:",a,b),"?throwException"===window.location.search)throw new Error("Throwing the error because URL has '?throwException'");if(o)try{if(9==a&&0==b&&(s=!0,t=!1),9==a&&1==b&&(t=!0,s=!1),9==a&&2==b&&(s=!1,t=!1,u=[]),9==a&&3==b){var c=g();if(gameLogic.isStepValid(q,c,r)){var d=gameLogic.createMove(q,c,r);o=!1,gameService.makeMove(d)}s=!1,t=!1,u=[]}if(9>a&&(s===!0||t===!0)){var e={row:a,col:a%2+2*b};u.push(e)}}catch(f){return void log.info(["Illegal movement from",a,b])}}function g(){var a=0===r?"B":"W",b=0===r?"W":"B",c={isInline:s,direction:{row:0,col:0},selfMarbles:[],opponentMarbles:[]};if(s===!0&&u.length>1){c.direction.row=u[1].row-u[0].row,c.direction.col=u[1].col-u[0].col,c.selfMarbles.push(u[0]);for(var d=u[1].row,e=u[1].col;d>=0&&8>=d&&e>=0&&16>=e;){var f={row:d,col:e};if(q.board[d][e]==a)c.selfMarbles.push(f),d+=c.direction.row,e+=c.direction.col;else{if(q.board[d][e]!=b)break;c.opponentMarbles.push(f),d+=c.direction.row,e+=c.direction.col}}}if(t===!0&&u.length>1){c.direction.row=u[1].row-u[0].row,c.direction.col=u[1].col-u[0].col;for(var g=0;g+2<=u.length;)c.selfMarbles.push(u[g]),g+=2}return c}function h(a,b){var c=a%2+2*b,d=q.board[a][c];return"B"===d||"W"===d?!0:!1}function i(a,b){var c=a%2+2*b;return"B"===q.board[a][c]}function j(a,b){var c=a%2+2*b;return"W"===q.board[a][c]}function k(a,b){return!n&&q.blackRemoved&&h(a,b)}function l(a){return"B"===a?"imgs/black.png":"W"===a?"imgs/white.png":""}function m(a,b){var c=a%2+2*b,d=q.board[a][c];return l(d)}var n=!1,o=!1,p=!1;a.isHelpModalShown=!1;var q=null,r=null,s=!1,t=!1,u=[];a.init=b,a.cellClicked=f,a.clickToAction=g,a.shouldShowImage=h,a.isPieceB=i,a.isPieceW=j,a.shouldSlowlyAppear=k,a.getImageSrc=m}(game||(game={})),angular.module("myApp",["ngTouch","ui.bootstrap","gameServices"]).run(function(){$rootScope.game=game,translate.setLanguage("en",{RULES_OF_ABALONE:"Rules of Abalone",RULES_SLIDE1:"Each side has 14 marbles and takes turns to move; whoever first removes 6 of the opponent's marbles wins.",RULES_SLIDE2:"Marbles in a line can be moved along the line by 1 step; at most 3 of your own marbles and less of your opponent's can be moved.",INLINE_MOVE:"Click on 'Inline Move' button; click on a marble to start and the next marble/position along moving direction; submit move;",RULES_SLIDE3:"You can also move 2~3 of your own marbles in a line to open space in a neighbor parallel line. ",BROADSIDE:"Click on 'Broad-side' button; for each marble to be moved, first click on the marble and then its new position; submit move;",CLOSE:"Close"}),game.init()});var aiService;!function(a){function b(a){return d(a.stateAfterMove,a.turnIndexAfterMove,{millisecondsLimit:1e3})}function c(a,b){for(var c=[],d=a.board,e=0===b?"B":"W",f=0,g=gameLogic.PLACES;f<g.length;f++){var h=g[f],i=h.row,j=h.col;if(d[i][j]===e)for(var k=0;6>k;k++){for(var l=gameLogic.DIREC[k],m=i,n=j,o=[h],p=0;2>p&&(m+=l.row,n+=l.col,!(0>m||m>=gameLogic.ROWS||0>n||n>=gameLogic.COLS||d[m][n]!==e));p++)o.push({row:m,col:n});var q=o.length;m=i+q*l.row,n=j+q*l.col;var r=0>m||m>=gameLogic.ROWS||0>n||n>=gameLogic.COLS||""===d[m][n]||d[m][n]===e;if(!r){if("O"===d[m][n]){var s={isInline:!0,direction:l,selfMarbles:o,opponentMarbles:[]};try{c.push(gameLogic.createMove(a,s,b))}catch(t){}}if(d[m][n]===(0===b?"W":"B")){var u=[{row:m,col:n}];m+=l.row,n+=l.col,m>=0&&m<gameLogic.ROWS&&n>=0&&n<gameLogic.COLS&&d[m][n]===(0===b?"W":"B")&&u.push({row:m,col:n});var s={isInline:!0,direction:l,selfMarbles:o,opponentMarbles:u};try{var v=gameLogic.createMove(a,s,b);if(""!==gameLogic.getWinner(v[2].set.value))return c=[v];c.push(v)}catch(t){}}}if(!(1>=q||k>2))for(;q>=2;){for(var w=0;5>w;w++)if(w!==k&&w!==k+3)try{var s={isInline:!1,direction:gameLogic.DIREC[w],selfMarbles:o,opponentMarbles:[]};gameLogic.isStepValid(a,s,b)&&c.push(gameLogic.createMove(a,s,b))}catch(t){}3===q&&o.pop(),q--}}}return c}function d(a,b,c){return alphaBetaService.alphaBetaDecision([null,null,{set:{key:"state",value:a}}],b,f,e,"?debug"===window.location.search?g:null,c)}function e(a){if(a[0].endMatch){var b=a[0].endMatch.endMatchScores;return b[0]>b[1]?Number.POSITIVE_INFINITY:b[0]<b[1]?Number.NEGATIVE_INFINITY:0}return 0}function f(a,b){return c(a[2].set.value,b)}function g(a){return"\n"+a[2].set.value.board.join("\n")+"\n"}a.findComputerMove=b,a.getPossibleMoves=c,a.createComputerMove=d}(aiService||(aiService={}));
//# sourceMappingURL=everything.min.js.map